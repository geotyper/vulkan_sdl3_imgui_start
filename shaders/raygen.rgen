#version 460 core
#extension GL_EXT_ray_tracing : require

// --- payload и все связанные структуры объявляем ДО использования
struct RadiancePayload {
    vec3  color;
    uint  depth;
};

layout(location = 0) rayPayloadEXT RadiancePayload prd;

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = 1, rgba8) uniform image2D          accumImage;
layout(set = 0, binding = 2) uniform CameraUBO {
    mat4 invView;
    mat4 invProj;
} cam;

void main()
{
    vec2  pixel = vec2(gl_LaunchIDEXT.xy);
    vec2  res   = vec2(gl_LaunchSizeEXT.xy);

    vec2  ndc    = (pixel + 0.5) / res * 2.0 - 1.0;

vec3  origin = (cam.invView * vec4(0,0,0,1)).xyz;

vec3  target = (cam.invProj * vec4(ndc,1,1)).xyz;
       target = (cam.invView * vec4(target,1)).xyz;

vec3  dir    = normalize(target - origin);   // направление уже vec3

// ───────────────── traceRayEXT 11-аргументный ─────────────────
traceRayEXT(topLevelAS,
            gl_RayFlagsOpaqueEXT,
            0xFF,
            /*sbtRecordOffset*/0,
            /*sbtRecordStride*/1,
            /*missIndex*/1,
            origin, 0.001,
            dir,    1e30,
            /*payloadLocation*/0);  // ← число, а не переменная-структура


    imageStore(accumImage, ivec2(pixel), vec4(prd.color, 1.0));
}

