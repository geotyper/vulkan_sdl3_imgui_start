#version 460 core
#extension GL_EXT_ray_tracing : enable
#extension GL_GOOGLE_include_directive : require

#include "../src/shared_with_shaders.h"

layout(location = SWS_LOC_PRIMARY_RAY)
rayPayloadInEXT RadiancePayload prd;

const float MIN_WEIGHT = 0.02;          // когда вклад стал незаметным

void main()
{
    // 0. Берём альфа и цвет из вершин (или текстуры)
    vec3  C = vec3(1.0);                // пример: белый куб
    float A = 0.3;                      // ваша прозрачность

    // 1. Считаем, фронт-фейс ли это
    bool frontFace = (gl_HitKindEXT == gl_HitKindFrontFacingTriangleEXT);
    if (!frontFace) {                   // задняя грань — сразу пропускаем
        ignoreIntersectionEXT;
        return;
    }

    // 2. Аккумулируем цвет
    prd.color  += prd.weight * A * C;
    prd.weight *= (1.0 - A);

    // 3. Решаем, нужен ли ещё один проход
    if (prd.weight > MIN_WEIGHT && prd.depth < 8)
        ignoreIntersectionEXT;          // идём дальше (сквозь окно)
    else
        terminateRayEXT;                // «завершаем» луч на этом слое
}

